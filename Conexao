Option Compare Database

Public Function TestaAcessoDaRede(Caminho As String, NomeDoCliente As String, NomeDaAutomacao As String, Peridiocidade As String, DataInicioDoProcessamento As Variant) As Long
'Testa se tem acesso a rede

If Dir(Caminho, vbDirectory) = vbNullString Then

    'Envia um e-mail de erro para o planejamento
    Call Mdl_Emails.EnviaEmailErro("erro.automacao@pd.tec.br", "planejamento@pd.tec.br", NomeDoCliente, NomeDaAutomacao, Peridiocidade, Err.Number, "Sem acesso a pasta <a href=" & Caminho & ">" & Caminho & "</a>", DataInicioDoProcessamento)
    'Encerra o access
    DoCmd.Quit
    
End If


End Function


Public Function TestaServidor(Tabela As String, Campo As String, NomeDoCliente As String, NomeDaAutomacao As String, Peridiocidade As String, DataInicioDoProcessamento As Variant)
'Declara as variáveis
Dim ConexaoTabelas As Variant

'Procura na tabela se o campo informado tem informação
ConexaoTabelas = DLookup(Campo, Tabela)

'Se o campo for nulo
If IsNull(ConexaoTabelas) = True Then
    
    'Envia um e-mail de erro para o planejamento
    Call Mdl_Emails.EnviaEmailErro("erro.automacao@pd.tec.br", "planejamento@pd.tec.br", NomeDoCliente, NomeDaAutomacao, Peridiocidade, Err.Number, "A BASE " & Tabela & " NÃO TEM INFORMAÇÕES", DataInicioDoProcessamento)
    'Encerra o access
    DoCmd.Quit
    
End If

End Function

Public Function GerenciaPastasEArquivos(Caminho As String, DiasHistorico As Integer)
'Faz a administração do histórico dos relatórios de uma pasta

'Declara as variáveis locais
Dim fldpath
Dim FSO As Object
Dim j As Long
Dim Pasta As Object

'Atribu as propriedades do objeto para a variável que vai gerenciar a pasta
Set FSO = CreateObject("Scripting.FileSystemObject")

'Passa o caminho da pasta
Set Pasta = FSO.GetFolder(Caminho)

'Passa os parâmetros para a sub rotina que faz o gerenciamento das pastas
SubPastas Pasta, DiasHistorico

'Limpa a variável
Set FSO = Nothing


End Function


Sub SubPastas(ByRef prntfld As Object, Optional Dias As Integer)


Dim SubFolder As Object
Dim subfld As Object
Dim j As Long
Dim Arquivo As String
Dim fs As Object
Dim f As Object


For Each SubFolder In prntfld.SubFolders
    'MsgBox prntfld & "\" & SubFolder.Name
    If SubFolder.DateLastModified < (Date - Dias) Then
        'If Dir(prntfld & "\" & SubFolder.Name & "\*.*", vbArchive) <> vbNullString Then Kill prntfld & "\" & SubFolder.Name & "\*.*"
        Set fs = CreateObject("Scripting.FileSystemObject")
        'MsgBox prntfld & "\" & SubFolder.Name
        fs.DeleteFolder (prntfld & "\" & SubFolder.Name)
    Else
        If Dir(prntfld & "\" & SubFolder.Name, vbDirectory) <> vbNullString Then Arquivo = Dir$(prntfld & "\" & SubFolder.Name & "\*.*", vbArchive)
        Do Until Arquivo = ""
            Set fs = CreateObject("Scripting.FileSystemObject")
            Set f = fs.GetFile(prntfld & "\" & SubFolder.Name & "\" & Arquivo)
            If f.DateLastModified < (Date - Dias) Then Kill prntfld & "\" & SubFolder.Name & "\" & Arquivo
            Arquivo = Dir
        Loop
    End If
Next SubFolder

For Each subfld In prntfld.SubFolders
    SubPastas subfld, Dias
Next subfld

End Sub
